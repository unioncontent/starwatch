<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="org.union.mappers.SNSMapper">
 
 	<sql id="search">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and sns_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and sns_content like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
			
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_property = '포함' and keyword_main = #{selectKey})
			</if>
		<if test="startDate != null and endDate != null">
			and writeDate <![CDATA[>=]]> #{startDate}
			and writeDate <![CDATA[<=]]> #{endDate}
		</if>
		<if test="textType != null">
			and textType = #{textType}
		</if>
	</sql>
	
	<sql id="search2">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and sns_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and sns_content like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_property = '포함' and keyword_main = #{selectKey})
			</if>	
		<if test="startDate == null">
			and createDate <![CDATA[>=]]> CURDATE()
		</if>	
		<if test="startDate != null">
			and createDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and createDate <![CDATA[<]]> #{endDate}
			</if>
		</if>
		<if test="textType != null">
			and textType = #{textType}
		</if>
	</sql>
	
	<sql id="search_writeDate">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and sns_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and sns_content like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_property = '포함' and keyword_main = #{selectKey})
			</if>	
		<if test="startDate == null">
			and writeDate <![CDATA[>=]]> CURDATE()
		</if>	
		<if test="startDate != null">
			and writeDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and writeDate <![CDATA[<]]> #{endDate}
			</if>
		</if>
		<if test="textType != null">
			and textType = #{textType}
		</if>
	</sql>
	<sql id="search_writeDate2">
 		<if test="keyword != null">
			<if test="searchType != null">
				<if test="searchType == 't'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
				<if test="searchType == 'c'.toString()">
					and portal_title like concat('%', #{keyword}, '%')
				</if>
			</if>
		</if>
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_property = '포함' and keyword_main = #{selectKey})
			</if>	
		<if test="startDate == null">
			and createDate <![CDATA[>=]]> CURDATE()
		</if>	
		<if test="startDate != null">
			and createDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and createDate <![CDATA[<]]> #{endDate}
			</if>
		</if>
	</sql>
	
	<sql id="search_writeDate3">
 		<if test="keyword != null">
			<if test="searchType != null">
				and sns_content like concat('%', #{keyword}, '%')
			</if>
		</if>
		<if test="startDate == null">
			and
        writeDate between date_add(curdate(), interval -1 month)
        and curdate()+1
		</if>	
		<if test="startDate != null">
			and writeDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and writeDate <![CDATA[<=]]> #{endDate}
			</if>
		</if>
	</sql>
	
	<sql id="search_writeDate4">
		<!-- <if test="startDate == null">
			and createDate <![CDATA[>=]]> CURDATE()
		</if> -->	
		<if test="startDate != null">
			and createDate <![CDATA[>=]]> #{startDate}
			<if test="endDate != null">
				and createDate <![CDATA[<=]]> #{endDate}
			</if>
		</if>
	</sql>
	
	<sql id="search_writeDate5">
		<if test="startDate != null">
			and createDate <![CDATA[>=]]>date_add(#{createminusDate}, interval -1 day)
				and createDate <![CDATA[<=]]> #{endDate}
		</if>
	</sql>
	<sql id="search_writeDate6">
		<if test="startDate != null">
			and createDate <![CDATA[>=]]>date_add(#{startDate}, interval -1 hour)
			<if test="endDate != null">
				and createDate <![CDATA[<=]]> #{endDate}
			</if>
		</if>
	</sql>
	
	<sql id="search_writeDate7">
		<if test="company != null">
			and
			   keyword in (select 
						keyword 
					from 
						keyword_data
					where
						user_idx = (select 
										user_idx 
									from 
										user_data 
									where 
										user_name = #{company} 
									and 
										keyword_property = '포함'
									)
					)
		</if>
		<if test="selectKey != null">
				and keyword in (select keyword from keyword_data where keyword_property = '포함' and keyword_main = #{selectKey})
			</if>	
		<if test="startDate == null">
			and writeDate <![CDATA[>=]]> date_add(CURDATE(), interval -1 day)  
		</if>	
		<if test="startDate != null">
			and writeDate <![CDATA[>=]]> date_add(#{startDate}, interval -1 day)  
			<if test="endDate != null">
				and writeDate <![CDATA[<]]> date_add(#{endDate}, interval -1 day)
			</if>
		</if>
	</sql>
	
 	<insert id="create">
 		insert into
 			sns_data(sns_name, sns_title, sns_content, sns_writer, like_cnt, reply_cnt, share_cnt, writeDate, keyword, keyword_type, url, textType, thumbnail)
 		values
 			(#{sns_name}, #{sns_title}, #{sns_content}, #{sns_writer}, #{like_cnt}, #{reply_cnt}, #{share_cnt}, #{writeDate}, #{keyword}, #{keyword_type}, #{url}, #{textType}, #{thumbnail})
 	</insert>
 
 	<select id="read" resultType="SNSVO">
 		select
 			*
 		from
 			sns_data
 		where
 			sns_idx = #{sns_idx}
 	
 	</select>
 	
 	<update id="update">
 		update
 			sns_data
 		set
 			sns_name = #{sns_name},
 			sns_title = #{sns_title},
 			sns_content = #{sns_content},
 			sns_writer = #{sns_writer},
 			like_cnt = #{like_cnt},
 			reply_cnt = #{reply_cnt},
 			share_cnt = #{share_cnt},
 			writeDate = #{writeDate},
 			keyword = #{keyword},
 			keyword_type = #{keyword_type},
 			url = #{url},
 			updateDate = now()
 		where
 			sns_idx = #{sns_idx}
 	
 	</update>
 	
 	<delete id="delete">
 		delete from
 			sns_data
 		where
 			sns_idx = #{sns_idx}
 			
 	</delete>
 	
 	<select id="allPageList" resultType="SNSVO">
		select
			*
		from
			sns_data
		where
			url is not null
		<include refid="search"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
	</select>
	
	<select id="allPageCount" resultType="Integer">
		select
			count(*)
		from
			sns_data
		where
			url is not null
		<include refid="search"></include>
	</select>
 	
 	<select id="countAll" resultType="Integer">
		select count(*)
		from sns_data
		where createDate between date_add(#{date}, interval -1 hour) and #{date}
	
	</select>
	
	<select id="showboxCountAll" resultType="Integer">
		select count(*)
		from sns_data
		where keyword in (select keyword from keyword_data where user_idx = any(select user_idx from user_data where user_name = '쇼박스') )
		and createDate between date_add(#{date}, interval -1 hour) and #{date}
	
	</select>
	
	<select id="reportSnsCount" resultType="Integer">
 		select
 			count(*) 
 		from 
 			sns_data 
 		where 
 			sns_name = #{sns_name}
 		<include refid="search_writeDate"></include>
 	</select>
	
 	<select id="yesterdayCount" resultType="GraphVO">
 		select count(if(writeDate <![CDATA[<]]> date_add(now(), interval -1 day), writeDate, null)) type1,
	    count(if(writeDate <![CDATA[>]]> date_add(now(), interval -1 day), writeDate, null)) type2
		from sns_data 
		where writeDate between date_add(now(), interval -2 day) and  date_add(now(), interval -0 day)
		and  sns_name = #{name}
 	</select>
 	
 	<select id="showboxYesterdayCount" resultType="GraphVO">
 		select count(if(writeDate <![CDATA[<]]> date_add(now(), interval -1 day), writeDate, null)) type1,
	    count(if(writeDate <![CDATA[>]]> date_add(now(), interval -1 day), writeDate, null)) type2
		from sns_data 
		where
		keyword in (select keyword from keyword_data where user_idx = any(select user_idx from user_data where user_name = '쇼박스') )
		and writeDate between date_add(now(), interval -2 day) and  date_add(now(), interval -0 day)
		and  sns_name = #{name}
 	</select>
 	
 	<select id="listExtract" resultType="SNSVO">
		select
			*
		from 
			sns_data
		where
			textType is null
		<if test="startDate != null">
		and
			writeDate <![CDATA[>]]> #{startDate}
		<if test="endDate != null">
  		and 
  			writeDate <![CDATA[<]]> #{endDate}
  		</if>
  		</if>
		<include refid="search"></include>
		order by
			createDate desc
		limit
			#{startPage}, #{perPageNum}
			
	
	</select>
	
	<select id="getExtractCount" resultType="Integer">
		select
			count(*)
		from 
			sns_data
		where
			textType is null
		<if test="startDate != null">
		and
			writeDate <![CDATA[>]]> #{startDate}
		<if test="endDate != null">
  		and 
  			writeDate <![CDATA[<]]> #{endDate}
  		</if>
  		</if>
		<include refid="search"></include>
	
	
	</select>
	
	<select id="listSearch" resultType="SNSVO">
		select 
			*
		from 
			sns_data
		where 
			url is not null
		and 
			keyword != ''
		<include refid="search_writeDate"></include>
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
	
	</select>
	
	<select id="periodListSearch" resultType="SNSVO">
		select 
			*
		from
		(select 
			*
		from 
			sns_data
		where 
			url is not null
		and 
			keyword != ''
		<include refid="search_writeDate"></include>
		
		UNION ALL
		
		select 
			*
		from 
			sns_data
		where 
			url is not null
		and 
			keyword != ''
		and
			sns_name ='youtube'
		<include refid="search_writeDate7"></include>) as x
		order 
			by updateDate desc
		limit  
			#{startPage}, #{perPageNum}
	
	</select>
	
	<select id = "getSearchCount" resultType="Integer">
		select
			count(*)
		from
			sns_data
		where
			url is not null
		and 
			keyword != ''
		<include refid="search_writeDate"></include>
			
	</select>
	
	<select id = "periodgetSearchCount" resultType="Integer">
		select 
			count(*)
		from
		(select 
			*
		from 
			sns_data
		where 
			url is not null
		and 
			keyword != ''
		<include refid="search_writeDate"></include>
		
		UNION ALL
		
		select 
			*
		from 
			sns_data
		where 
			url is not null
		and 
			keyword != ''
		and
			sns_name ='youtube'
		<include refid="search_writeDate7"></include>) as x
			
	</select>
 	
 	<select id="listExcel" resultType="SNSVO">
 		select 
 			* 
 		from 
 			sns_data 
 		where 
 			sns_idx > 0
 		and 
			keyword != ''
 		<include refid="search"></include>
 	</select>
 	
 	<select id="listExcelCount" resultType="Integer">
 		select 
 			count(*) 
 		from 
 			sns_data 
 		where 
 			sns_idx > 0
 		and 
			keyword != ''
 		<include refid="search"></include>
 	</select>
 	
 	<select id="listAll" resultType="SNSVO">
		select 
			*
		from 
			sns_data
		where 
			url is not null
		and 
			keyword != ''
		<include refid="search"></include>
		and sns_name = #{portal_name}
	
	</select>
	
	<select id="youtubeListAll" resultType="SNSVO">
		select 
			*
		from 
			sns_data
		where 
			url is not null
		and 
			keyword != ''
		<include refid="search2"></include>
		and 
			sns_name = #{portal_name}
		order 
			by createDate desc
	</select>
 	
 	<select id="facebookSum" resultType="GraphVO">
 		select count(*) type1, sum(like_cnt) likeCount, sum(share_cnt) shareCount, sum(reply_cnt) replyCount
		from union.sns_data
		where sns_name = 'facebook'
		<include refid="search"></include>
 	</select>
 	
 	<select id="twitterSum" resultType="GraphVO">
 		select count(*) type1, sum(like_cnt) likeCount, sum(share_cnt) shareCount, sum(reply_cnt) replyCount
		from union.sns_data
		where sns_name = 'twitter'
		<include refid="search"></include>
 	</select>
 	
 	<select id="instagramSum" resultType="GraphVO">
 		select count(*) type1, sum(like_cnt) likeCount, sum(share_cnt) shareCount, sum(reply_cnt) replyCount
		from union.sns_data
		where sns_name = 'instagram'
		<include refid="search"></include>
 	</select>
 	
 	<select id="facebookList" resultType="SNSVO">
 		select 
			*
		from 
			sns_data
		where 
			sns_name = 'facebook'
		<include refid="search"></include>
		order 
			by writeDate desc
		limit  
			#{startPage}, #{perPageNum}
 	</select>
 	
 	<select id="facebookTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'facebook'
 		<include refid="search_writeDate"></include>
 		
 	</select>
 	
 	<select id="snsFacebookTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'facebook'
 		<include refid="search"></include>
 		
 	</select>
 	
 	<select id="instaList" resultType="SNSVO">
 		select 
			*
		from 
			sns_data
		where 
			sns_name = 'instagram'
		<include refid="search_writeDate"></include>
		order 
			by writeDate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="instaTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'instagram'
 		
 		<include refid="search_writeDate"></include>
 		
 	</select>
 	
 	<select id="twitterList" resultType="SNSVO">
 		select 
			*
		from 
			sns_data
		where 
			sns_name = 'twitter'
		<include refid="search_writeDate"></include>
		order 
			by writeDate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="twitterTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'twitter'
 		
 		<include refid="search_writeDate"></include>
 		
 	</select>
 	
 	<select id="youtubeList" resultType="SNSVO">
 		select 
			createDate, date_format(writeDate, '%x-%m-%d')as writeDate, title_key, keyword, url, sns_title, sns_writer, like_cnt, view_cnt, reply_cnt
		from 
			sns_data
		where 
			sns_name = 'youtube'
		and
			keyword != ''
		<include refid="search2"></include>
		order 
			by createDate desc
		limit  
			#{startPage}, #{perPageNum}
 	
 	</select>
 	
 	<select id="youtubeTotalCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'youtube'
 		and 
			keyword != ''
 		<include refid="search2"></include>
 		
 	</select>
 	
 	<select id="getDateCount" resultType="SNSVO">
 		select 
 			date_format(createDate, '%x-%m-%d') writeDate, like_cnt, reply_cnt, share_cnt, sns_name
  		from 
  			sns_data
  		where 
  			sns_name = #{portal_name}
  		<include refid="search"></include>
  		order by  date_format(createDate, '%x-%m-%d') desc
 	
 	</select>
 	
 	<select id="replyGetDateCount" resultType="Integer">
 		select IFNULL(sum(reply_cnt), 0)
		from sns_data
		where
			sns_name = #{portal_name}
		<include refid="search"></include>
		and
			writeDate between date_add(date_add(#{writeDate}, interval +1 hour), interval -1 hour) and date_add(#{writeDate}, interval +1 hour)
 	
 	</select>
 	<select id="likeGetDateCount" resultType="Integer">
 		select IFNULL(sum(like_cnt), 0)
		from sns_data
		where
			sns_name = #{portal_name}
		<include refid="search"></include>
		and
			writeDate between date_add(date_add(#{writeDate}, interval +1 hour), interval -1 hour) and date_add(#{writeDate}, interval +1 hour)
 	
 	</select>
 	<select id="shareGetDateCount" resultType="Integer">
 		select IFNULL(sum(share_cnt), 0)
		from sns_data
		where
			sns_name = #{portal_name}
		<include refid="search"></include>
		and
			writeDate between date_add(date_add(#{writeDate}, interval +1 hour), interval -1 hour) and date_add(#{writeDate}, interval +1 hour)
 	
 	</select>
 	
 	<select id="YviewGetDateCount" resultType="Integer">
 		select IFNULL(sum(view_cnt), 0)
		from sns_data
		where
			sns_name = #{portal_name}
		and 
			keyword != ''
		<include refid="search"></include>
		and writeDate <![CDATA[>=]]> #{startDate}
		and writeDate <![CDATA[<=]]> #{endDate}
 	
 	</select>
 	
 	<select id="YreplyGetDateCount" resultType="Integer">
 		select IFNULL(sum(reply_cnt), 0)
		from sns_data
		where
			sns_name = #{portal_name}
		and 
			keyword != ''
		<include refid="search"></include>
		and writeDate <![CDATA[>=]]> #{startDate}
		and writeDate <![CDATA[<=]]> #{endDate}
 	
 	</select>
 	
 	<select id="YlikeGetDateCount" resultType="Integer">
 		select IFNULL(sum(like_cnt), 0)
		from sns_data
		where
			sns_name = #{portal_name}
		and 
			keyword != ''
		<include refid="search"></include>
		and writeDate <![CDATA[>=]]> #{startDate}
		and writeDate <![CDATA[<=]]> #{endDate}
 	
 	</select>
 	
 	<update id="updateTextType">
		update
			sns_data
		set
			textType = #{textType}, 
			updateDate = now()
		where
			sns_idx = #{sns_idx}
	
	</update>

	<update id="updateThumbnail">
		update
			sns_data
		set
			thumbnail = #{thumbnail}
		where
			sns_idx = #{sns_idx}
	
	</update>
	
	<select id="facebookCnt" resultType="SNSVO">
		select
		sum(like_cnt) like_cnt,
		sum(reply_cnt) reply_cnt,
		sum(share_cnt) share_cnt
		from sns_data
        where
        sns_name = 'facebook'
        and sns_title is not null
        <include refid="search_writeDate"></include>
	</select>
	
	<select id="instaCnt" resultType="SNSVO">
		select
		sum(like_cnt) like_cnt,
		sum(reply_cnt) reply_cnt,
		sum(share_cnt) share_cnt
		from sns_data
        where
        sns_name = 'instagram'
        and sns_title is not null
        <include refid="search_writeDate"></include>
	</select>
	
	<select id="twiCnt" resultType="SNSVO">
		select
		sum(like_cnt) like_cnt,
		sum(reply_cnt) reply_cnt,
		sum(share_cnt) share_cnt
		from sns_data
        where
        sns_name = 'twitter'
        and sns_title is not null
        <include refid="search_writeDate"></include>
	</select>
	
	<select id="snsTotalCnt" resultType="SNSVO">
		select
		sum(like_cnt) like_cnt,
		sum(reply_cnt) reply_cnt,
		sum(share_cnt) share_cnt
		from sns_data
        where
        sns_title is not null
        <include refid="search_writeDate"></include>
	</select>
	
	<select id="facebookCGV" resultType="FvVO">
 		select 
		DATE_FORMAT(createDate,'%Y-%m-%d') createDate, view_cnt, like_cnt,share_cnt, reply_cnt
		from facebook_videos
		where url is not null
		<include refid="search_writeDate3"></include>
		group by DATE_FORMAT(createDate,'%Y-%m-%d')
		ORDER BY createDate ASC;
 	</select>
 	
 	<select id="facebookCGVList" resultType="FvVO">
 		select 
		DATE_FORMAT(writeDate,'%Y-%m-%d') writeDate, sns_content, sns_subcontent, url, max(view_cnt)as view_cnt, max(like_cnt)as like_cnt, max(reply_cnt)as reply_cnt,count(*) as total
		from facebook_videos
        where
			sns_writer = #{sns_writer}
        <include refid="search_writeDate3"></include>
        group by writeDate
        order by writeDate desc
        limit  
			#{startPage}, #{perPageNum}
 	</select>
 	
 	<select id="facebookCGVallList" resultType="FvVO">
 		select 
		DATE_FORMAT(writeDate,'%Y-%m-%d') writeDate, sns_content, url, max(view_cnt)as view_cnt, max(like_cnt)as like_cnt, max(reply_cnt)as reply_cnt,count(*) as total
		from facebook_videos
        where
			sns_writer = #{sns_writer}
        group by url
        order by writeDate desc
 	</select>
 	
 	<select id="facebookCGVListTotalCnt" resultType="Integer">
		select 
		count(*) as total
        from(
        select DATE_FORMAT(writeDate,'%Y-%m-%d') writeDate, sns_content
		from facebook_videos
        where
			sns_writer = #{sns_writer}
        <include refid="search_writeDate3"></include>
        group by writeDate) as total
	</select>
	
 	<select id="fvlistSearch" resultType="FvVO">
 		select 
 			DATE_FORMAT(createDate,'%Y-%m-%d') createDate, sns_content, url, max(view_cnt)as view_cnt, max(like_cnt)as like_cnt, max(reply_cnt)as reply_cnt,count(*) as total 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		<include refid="search_writeDate4"></include>	
		group 
			by DATE_FORMAT(createDate,'%Y-%m-%d')
		order 
			by createDate desc
 	</select>
 	
 	<select id="fvlistSearchTotalCnt" resultType="Integer">
 		select 
			count(*) as total
        from(
 		select 
 			DATE_FORMAT(createDate,'%Y-%m-%d') createDate, sns_content, url, max(view_cnt)as view_cnt, max(like_cnt)as like_cnt, max(reply_cnt)as reply_cnt,count(*) as total 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		<include refid="search_writeDate4"></include>
 		group by DATE_FORMAT(createDate,'%Y-%m-%d')
		order 
			by createDate desc) as total;
 	</select>
 	
 	<select id="fvlistSearchList" resultType="FvVO">
 		select 
 			* 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		and 
 			createDate <![CDATA[>=]]> #{createstartDate}
		and 
			createDate <![CDATA[<=]]> #{createendDate}	
		order 
			by createDate desc
 	</select>
 	
 	<select id="fvlistSearchListTotalCnt" resultType="Integer">
 		select 
 			count(*) 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		and 
 			createDate <![CDATA[>=]]> #{createstartDate}
		and 
			createDate <![CDATA[<=]]> #{createendDate}
 		order 
			by createDate desc
 	</select>
 	
 	<select id="fvlistSearchEx" resultType="FvVO">
 		select 
 			* 
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
 		<include refid="search_writeDate4"></include>	
		order 
			by createDate asc
 	</select>
 	
 	<select id="fvlistViewCnt" resultType="Integer">
 		select
			f.view_cnt as view_cnt
		from
		(select 
				(b.view_cnt-a.view_cnt) as view_cnt
		from
			(select @RNUM:=@RNUM+1 AS ROWNUM, view_cnt from (SELECT @RNUM:=0) R,(SELECT IFNULL(SUM(view_cnt), 0)as view_cnt FROM facebook_videos WHERE view_cnt !=1 and url = #{url} and createDate between date_add(#{date}, interval -1 hour) and #{date} order by createDate desc limit 1)c) a,
	        (select @RNUM1:=@RNUM1+1 AS ROWNUM, view_cnt from (SELECT @RNUM1:=0) R,(select * from facebook_videos where url = #{url} and createDate >= #{date} order by createDate asc limit 1)d) b
		where a.rownum = b.rownum) f;  
 	</select>
 	
 	<select id="fvlistReply_cnt" resultType="Integer">
 		select
			f.reply_cnt as reply_cnt
		from
		(select 
				(b.reply_cnt-a.reply_cnt) as reply_cnt
		from
			(select @RNUM:=@RNUM+1 AS ROWNUM, reply_cnt from (SELECT @RNUM:=0) R,(SELECT IFNULL(SUM(reply_cnt), 0)as reply_cnt FROM facebook_videos WHERE reply_cnt !=1 and url = #{url} and createDate between date_add(#{date}, interval -1 hour) and #{date} order by createDate desc limit 1)c) a,
	        (select @RNUM1:=@RNUM1+1 AS ROWNUM, reply_cnt from (SELECT @RNUM1:=0) R,(select * from facebook_videos where url = #{url} and createDate >= #{date} order by createDate asc limit 1)d) b
		where a.rownum = b.rownum) f;  
 	</select>
 	
 	<select id="fvlistlike_cnt" resultType="Integer">
 		select
			f.like_cnt as like_cnt
		from
		(select 
				(b.like_cnt-a.like_cnt) as like_cnt
		from
			(select @RNUM:=@RNUM+1 AS ROWNUM, like_cnt from (SELECT @RNUM:=0) R,(SELECT IFNULL(SUM(like_cnt), 0)as like_cnt FROM facebook_videos WHERE like_cnt !=1 and url = #{url} and createDate between date_add(#{date}, interval -1 hour) and #{date} order by createDate desc limit 1)c) a,
	        (select @RNUM1:=@RNUM1+1 AS ROWNUM, like_cnt from (SELECT @RNUM1:=0) R,(select * from facebook_videos where url = #{url} and createDate >= #{date} order by createDate asc limit 1)d) b
		where a.rownum = b.rownum) f;  
 	</select>
 	
 	<!-- facebook_graph 테이블 사용시
 	<select id="fvlistViewCnt" resultType="Integer">
 		select
			view_cnt
		from
			facebook_graph
		where
			url = #{url} 
		and 
			createDate >= #{date} 
		order by createDate asc limit 1
 	</select>
 	
 	<select id="fvlistReply_cnt" resultType="Integer">
 		select
			reply_cnt
		from
			facebook_graph
		where
			url = #{url} 
		and 
			createDate >= #{date} 
		order by createDate asc limit 1 
 	</select>
 	
 	<select id="fvlistlike_cnt" resultType="Integer">
 		select
			like_cnt
		from
			facebook_graph
		where
			url = #{url} 
		and 
			createDate >= #{date} 
		order by createDate asc limit 1
 	</select> -->
 	
 	<select id="fvlistPlus" resultType="FvVO">
 		select 
 			*
		from 
			facebook_videos 
		where  
			url = #{url}
		<include refid="search_writeDate4"></include>
		order 
			by createDate asc
 	</select>
 	
 	<select id="fvlistlimt" resultType="FvVO">
 		select 
 			* 
 		from 
 			facebook_videos 
 		where url = #{url} 
 		order by createDate asc limit 1;
 	</select>
 	
 	<select id="fvlistMinus2" resultType="FvVO">
 		select 
 			*
		from 
			facebook_videos 
		where 
			url = #{url}
		<include refid="search_writeDate5"></include>
		order 
			by createDate asc
 	</select>
 	
 	<select id="fvlistMinus" resultType="FvVO">
 		select 
 			view_cnt, reply_cnt, like_cnt
		from 
			facebook_videos 
		where 
			view_cnt != (select view_cnt from facebook_videos where url =#{url} and 
 			createDate <![CDATA[>=]]> date_add(#{createminusDate}, interval -1 day)
		and 
			createDate <![CDATA[<=]]> #{createendDate} order by createDate desc limit 1) 
		and 
			url = #{url}
		and 
 			createDate <![CDATA[>=]]> date_add(#{createminusDate}, interval -1 day)
		and 
			createDate <![CDATA[<=]]> #{createendDate}
		order 
			by createDate desc
 	</select>
	<select id="fvlistSearchTime" resultType="FvVO">
 		select 
 			*
 		from 
 			facebook_videos
 		where
 			url = #{url}
 		order by createDate asc 
 		limit 1
 	</select>
 	<select id="fvSearchlistSearchTime" resultType="FvVO">
 		select 
 			*
 		from 
 			facebook_videos
 		where
 			url = #{url}
 		and 
 			createDate <![CDATA[>=]]> #{createstartDate}
		and 
			createDate <![CDATA[<=]]> #{createendDate}
 		order by createDate asc 
 		limit 1
 	</select>
 	<!-- <select id="fvlistUpEx" resultType="FvVO">
 		select
		f.sns_content as sns_content, f.writeDate as writeDate, f.createDate as createDate, abs(f.view_cnt) as view_cnt, abs(f.reply_cnt) as reply_cnt, abs(f.like_cnt) as like_cnt
	from
	(select 
		b.sns_content, b.writeDate, b.createDate, (b.view_cnt-a.view_cnt) as view_cnt, (b.reply_cnt-a.reply_cnt) as reply_cnt, (b.like_cnt-a.like_cnt) as like_cnt
	from
		(select @RNUM:=@RNUM+1 AS ROWNUM, sns_content, writeDate, createDate, view_cnt, reply_cnt, like_cnt 
        from (SELECT @RNUM:=0) R,
        
        (select ''as 'sns_content',''as 'writeDate',''as 'createDate' ,0 as 'view_cnt', 0 as 'reply_cnt', 0 as 'like_cnt' from dual 
        union all
        select 
 			sns_content, writeDate, createDate, view_cnt, reply_cnt, like_cnt
		from 
			facebook_videos 
		where
			view_cnt != (select view_cnt from facebook_videos where url =#{url}
		<include refid="search_writeDate5"></include>	 
			order by createDate desc limit 1) 
		and
			url = #{url}
		<include refid="search_writeDate5"></include>
		order 
			by createDate asc)c) a,
        
        (select @RNUM1:=@RNUM1+1 AS ROWNUM, sns_content, writeDate, createDate, view_cnt, reply_cnt, like_cnt 
        from (SELECT @RNUM1:=0) R,
        
        (select sns_content, writeDate, createDate, view_cnt, reply_cnt, like_cnt  
        from 
			facebook_videos 
		where 
			url = #{url}
		 <include refid="search_writeDate6"></include>
         order by createDate asc)d) b
	where a.rownum = b.rownum) f 
 	</select> -->
 	
 	<select id="fvlistOne" resultType="FvVO">
 		select 
 			createDate, sns_content, url, sns_subcontent
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
		order by createDate asc 
			limit 1;
 	</select>
 	<select id="fvlistTwo" resultType="FvVO">
 		select 
 			createDate, sns_content, url, sns_subcontent
 		from 
 			facebook_videos 
 		where 
 			url = #{url}
		order by createDate asc 
			limit 1;
 	</select>
 	
 	<select id="fvlistGraph" resultType="FvVO">
 		select 0 as 'view_cnt', 0 as 'reply_cnt', 0 as 'like_cnt' from dual 
        	union all
 		select 
 			view_cnt, reply_cnt, like_cnt 
 		from 
 			facebook_videos 
 		where 
 			url = #{url};
 	</select>
 	
 	<!-- facebook_graph 테이블 사용시
 	<select id="fvlistGraph" resultType="FvVO">
 		select 
 			view_cnt, reply_cnt, like_cnt 
 		from 
 			facebook_graph 
 		where 
 			url = #{url};
 	</select> -->
 	
 	<select id="snsTotalcount" resultType="Integer">
		select
			count(*)
		from
			sns_data
		where
			sns_content is not null
		<include refid="search_writeDate"></include>
		and
			createDate >= curdate();
		
	</select>
	
	<select id="graphfacebookCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'facebook'
 		and 
			keyword in (select keyword from keyword_data where keyword_property = '포함' and keyword_main = #{selectKey})
		and writeDate <![CDATA[>=]]> #{startDate}
		and writeDate <![CDATA[<=]]> #{endDate}

 	</select>
 	<select id="graphinstaCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'instagram'
 		and 
			keyword in (select keyword from keyword_data where keyword_property = '포함' and keyword_main = #{selectKey})
		and createDate <![CDATA[>=]]> #{startDate}
		and createDate <![CDATA[<=]]> #{endDate}

 	</select>
 	<select id="graphtwitterCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'twitter'
 		and 
			keyword in (select keyword from keyword_data where keyword_property = '포함' and keyword_main = #{selectKey})
		and createDate <![CDATA[>=]]> #{startDate}
		and createDate <![CDATA[<=]]> #{endDate}
 	</select>
 	<select id="graphyoutubeCount" resultType="Integer">
 		select 
 			count(*)
 		from	
 			sns_data
 		where
 			sns_name = 'youtube'
 		and 
 			keyword != ''
 		and 
			keyword in (select keyword from keyword_data where keyword_property = '포함' and keyword_main = #{selectKey})
		and createDate <![CDATA[>=]]> #{startDate}
		and createDate <![CDATA[<=]]> #{endDate}
 	</select>

	<update id="fvUpdate">
 		update
 			facebook_videos
 		set
 			sns_subcontent = #{sns_subcontent}
 		where
 			url = #{url};
 	</update>
 	
 	<select id="fvCheckList" parameterType="String" resultType="FvVO">
		<if test="_parameter == 'CGV'.toString()">
			select *
			from facebook_videos
			where
				sns_writer='CGV'
            and 
				createDate >=  date_format(now(), '%x-%m-%d')
			order by createDate desc 
			limit 1;
		</if>
		<if test="_parameter == '롯데시네마'.toString()">
			select *
			from facebook_videos
			where
				sns_writer='롯데시네마'
            and 
				createDate >=  date_format(now(), '%x-%m-%d')
			order by createDate desc 
			limit 1;
		</if>
		<if test="_parameter == '메가박스'.toString()">
			select *
			from facebook_videos
			where
				sns_writer='메가박스'
            and 
				createDate >=  date_format(now(), '%x-%m-%d')
			order by createDate desc 
			limit 1;
		</if>
		<if test="_parameter == '방울방울'.toString()">
			select *
			from facebook_videos
			where
				sns_writer='방울방울'
            and 
				createDate >=  date_format(now(), '%x-%m-%d')
			order by createDate desc 
			limit 1;
		</if>
	</select>
	
	<select id="fvMonitor" parameterType="Map" resultType="FvVO">
		select *
			from facebook_videos
			where
				sns_writer=#{sns_writer}
            and 
				createDate >=  date_format(now(), '%x-%m-%d')
			order by createDate desc 
			limit 1;
	</select>
 </mapper>